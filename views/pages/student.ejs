<!DOCTYPE html>
<html lang="en">
<%- include('../partials/header_content') %>
	<%- include('../partials/sockets') %>
		<%- include('../partials/formbar_header') %>

			<body onload="pageload('<%-mode%>', <%-pollStatus%>, <%-posTextRes%>, <%- quiz %>)">
				<div id="lessonContent">
					<%if(lesson.content !=undefined){%>
						<h3 id="headerText">
							<%- lesson.date %>
						</h3>
						<% for (let i=0; i < lesson.content.length; i++) { %>
							<u>
								<h2 id="headerText">
									<%-lesson.content[i][0]%>
								</h2>
							</u>
							<% for (let u=1; u < lesson.content[i].length; u++) { %>
								<b id="headerText">
									<%- lesson.content[i][u]%>
								</b><br>
								<% } %>
									<% } %>
										<br>
										<a href="/previousLessons" class="quickButton">Go To A Previous Lesson</a>
										<% } else { %>
											<h1 id="headerText" class="textColorContent">No active lesson</h1>
											<a href="/previousLessons" class="quickButton">Go To A Previous Lesson</a>
											<% } %>

				</div>
				<div id="pollContent">
					<h1 id="noPoll" class="textColorContent">No active poll</h1>

					<div id="poll">
						<u>
							<h2 id="headerText">
								<%-pollPrompt%>
							</h2>
						</u>
						<form id="pollForm">

						</form>
						<br>
						<button onclick="submitPoll()" class="quickButton">Submit</button>
					</div>

				</div>
				<div id="quizContent">
					<form id="quizForm" method="post" action="/student">
					</form>
				</div>
				<%- include('../partials/body_content') %>
			</body>

			<script type="text/javascript">
				//variable creation
				var resTextBox = document.getElementById('resTextBox')
				var pollForm = document.getElementById('pollForm')
				var pollContent = document.getElementById('pollContent')
				var quizContent = document.getElementById('quizContent')
				var lessonContent = document.getElementById('lessonContent')
				var poll = document.getElementById('poll')
				var noPoll = document.getElementById('noPoll')
				var poll = document.getElementById('poll')
				var oldLettRes = '<%- myRes %>'
				var oldTextRes = '<%- myTextRes %>'

				function pageload(mode, pollStatus, pollTextRes, quiz) {
					if (mode == 'poll') {
						pollContent.style.display = 'block'
						quizContent.style.display = 'none'
						lessonContent.style.display = 'none'
						var posPollRes = '<%- posPollRes %>'
						posPollRes = JSON.parse(posPollRes)
						posPollRes[''] = 'Remove'
						var posTextRes = '<%- posTextRes %>'
						posTextRes = posTextRes.replace(/&#34;/g, '"').replace(/&#60;/g, ',')
						posTextRes = JSON.parse(posTextRes)
						if (pollStatus) {
							noPoll.style.display = 'none'
							poll.style.display = 'block'

							let keys = Object.keys(posPollRes)

							socket.emit('vbUpdate')
							socket.on('vbUpdate', (pollsData) => {
								if (pollForm.innerText) return
								// Creates all selectable answers and displays them to the user
								for (let i = 0; i < keys.length; i++) {
									//Show the color associated with the answer
									let color = ''
									let CC = '01234569ABCDEF'
									let colorI = CC[Math.floor(i / 2)]
									let colorJ = CC[13 - Math.floor(i / 2)]
									switch (i % 6) {
										case 0:
											color = `#${colorJ}${colorI}${colorI}`
											break
										case 1:
											color = `#${colorI}${colorI}${colorJ}`
											break
										case 2:
											color = `#${colorI}${colorJ}${colorI}`
											break
										case 3:
											color = `#${colorJ}${colorI}${colorJ}`
											break
										case 4:
											color = `#${colorI}${colorJ}${colorJ}`
											break
										case 5:
											color = `#${colorJ}${colorJ}${colorI}`
											break
									}
									if (i == keys.length - 1) color = 'black'
									pollForm.innerHTML += `
										<label class="form-control" id="pollControl" style="--theme-color: ${color};">
											<input type="radio" name="poll" id="${keys[i] || 'remove'}" value="${keys[i]}">
											${posPollRes[keys[i]]}
										</label>
									`
								}
								if (posTextRes) {
									pollForm.innerHTML += `<br><input type="text" name="resText" id="resTextBox" value="${oldTextRes}">`
								}
							})
						} else {
							noPoll.style.display = 'block'
							poll.style.display = 'none'
						}

						if (oldLettRes) {
							document.getElementById(oldLettRes).checked = true
						}

					} else if (mode == 'quiz') {
						pollContent.style.display = 'none'
						quizContent.style.display = 'block'
						lessonContent.style.display = 'none'
						let correctAnswerIndex = []
						let quizForm = document.getElementById('quizForm')

						for (let i = 0; i < quiz.questions.length; i++) {
							quizForm.innerHTML += `</br><br><b class="textColorContent">${quiz.questions[i][0]}</b>`
							correctAnswerIndex.push(quiz.questions[i][1])
							for (let u = 2; u < quiz.questions[i].length; u++) {
								quizForm.innerHTML += `</br><input type="checkbox" name="question" value="${u - 1}"> ${quiz.questions[i][u]}`
							}
						}
						quizForm.innerHTML += `</br><br><button type="submit" class="quickButton">Submit Answers</button>`
					} else if (mode == 'lesson') {
						pollContent.style.display = 'none'
						quizContent.style.display = 'none'
						lessonContent.style.display = 'block'
					}
				}
				/* _____   _____   _       _       _____
				|  _  \ /  _  \ | |     | |     /  ___/
				| |_| | | | | | | |     | |     | |___
				|  ___/ | | | | | |     | |     \___  \
				| |     | |_| | | |___  | |___   ___| |
				|_|     \_____/ |_____| |_____| /_____/ */
				// Submits the users answer to the poll
				// Takes the posPollRes value which defines the number of possible answers
				function submitPoll() {
					var radios = document.getElementsByTagName('input')
					var lettRes = ''
					var textRes = ''
					for (var i = 0; i < radios.length; i++) {

						if (radios[i].type === 'radio' && radios[i].checked) {
							// Defines the letter response of the user
							lettRes = radios[i].value

						}
						if (radios[i].type === 'text') {
							// Defines the text input of the user
							textRes = radios[i].value
						}

					}

					// Sends user input to the server
					socket.emit('pollResp', lettRes, textRes)
					socket.emit('vbUpdate')
					socket.emit('cpupdate')
					socket.emit('sfxPlay', 'sfx_up01')
					let alertText = ''
					setTimeout(function () {
						if (lettRes)
							alertText += 'Response submitted: ' + lettRes
						else if (oldLettRes)
							alertText += 'Response removed'
						else if (document.getElementById('remove').checked)
							alertText += 'No poll response to remove'
						if (textRes) {
							if (alertText) alertText += '\n'
							alertText += 'Text response submitted: ' + textRes
						} else if (oldTextRes) {
							if (alertText) alertText += '\n'
							alertText += 'Text response removed'
						}
						if (alertText) alert(alertText)

						oldLettRes = lettRes
						oldTextRes = textRes
					}, 100)
				}




				// Function will run on page load
				// Checks if poll is active
				// Creates any number of responses that were defined by the teacher
				// Checks if teacher wanted text responses or not

				// When a new poll is created or ended or new barmode is, this refreshes the page
				socket.on('reload', function () {
					location.reload()
				})


				/* _____     _   _   _   ______  ______  _____   _____
				/  _  \   | | | | | | |___  / |___  / | ____| /  ___/
				| | | |   | | | | | |    / /     / /  | |__   | |___
				| | | |   | | | | | |   / /     / /   |  __|  \___  \
				| |_| |_  | |_| | | |  / /__   / /__  | |___   ___| |
				\_______| \_____/ |_| /_____| /_____| |_____| /_____/  */


				/* _       _____   _____   _____   _____   __   _   _____
				| |     | ____| /  ___/ /  ___/ /  _  \ |  \ | | /  ___/
				| |     | |__   | |___  | |___  | | | | |   \| | | |___
				| |     |  __|  \___  \ \___  \ | | | | | |\   | \___  \
				| |___  | |___   ___| |  ___| | | |_| | | | \  |  ___| |
				|_____| |_____| /_____/ /_____/ \_____/ |_|  \_| /_____/  */


			</script>

</html>